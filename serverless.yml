# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: books
# app and org for use with dashboard.serverless.com
app: kindle-books-app
org: saintpatricius

configValidationMode: error

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

custom:
  stage: ${opt:stage, 'dev'}
  dbConnection: ${ssm:/aws/reference/secretsmanager/books/dev/db~true}
  topicName: books-${self:custom.stage}
  topicArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - ${self:custom.topicName}

provider:
  name: aws
  runtime: python3.8

# you can overwrite defaults here
  stage: ${self:custom.stage}
  region: ${opt:region, 'eu-central-1'}

  stackTags:
    project: kindle-books-sender

  apiGateway:
    shouldStartNameWithService: true

  apiKeys:
    - name: test1

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sns:Publish"
      Resource:
        - ${self:custom.topicArn}

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
 exclude:
   - tests
   - appConfig.local.json

functions:
  add_book:
    handler: handler.handle_add_book
#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
    events:
     - http:
         path: books
         method: post
         private: true
    environment:
      DB_HOST: ${self:custom.dbConnection.host}
      DB_NAME: ${self:custom.dbConnection.dbname}
      DB_USER: ${self:custom.dbConnection.username}
      DB_PASSWORD: ${self:custom.dbConnection.password}
      DB_ENGINE: postgres
      BOOKS_TOPIC: ${self:custom.topicArn}

# you can add CloudFormation resource templates here
resources:
  Resources:
    downloadsBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: books-downloads
    booksTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:custom.topicName}

plugins:
  - serverless-python-requirements

